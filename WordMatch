# The Positive and Negative word lists were found and can be downloaded from:
#    http://www.cs.uic.edu/~liub/FBS/sentiment-analysis.html
#
# Authors of these lists and their relevant paper are cited as follows:
#   Minqing Hu and Bing Liu. "Mining and Summarizing Customer Reviews." 
#       Proceedings of the ACM SIGKDD International Conference on Knowledge 
#       Discovery and Data Mining (KDD-2004), Aug 22-25, 2004, Seattle, 
#       Washington, USA, 
#Script structure adapted from the following Article: 
#https://www.r-bloggers.com/sentiment-analysis-on-donald-trump-using-r-and-tableau/

##This script matches Positive and Negative words to a composite corpus grouped by each news source, 
##and then visualizes the percent differences in positive and negative matches.
library(stringr)
library(tm)
library(plyr)
library(dplyr)
library(wordcloud)
library(ROAuth)
library(sqldf)
library(ggplot2)
library(reshape)
library(reshape2)
library(scales)

setwd("C:...")
dfCNN <- read.csv("dfCNN.csv", stringsAsFactors = FALSE)
dfFox <- read.csv("dfFox.csv", stringsAsFactors = FALSE)
dfNBC <- read.csv("dfNBC.csv", stringsAsFactors = FALSE)
dfNPR <- read.csv("dfNPR.csv", stringsAsFactors = FALSE)
dfNYTimes <- read.csv("dfNYTimes.csv", stringsAsFactors = FALSE)
newsDF <- read.csv("newsDF.csv")
#PosMtchsArt <- vector("numeric", length = 5)
#NegMtchsArt <- vector("numeric", length = 5)
#PosMtchsTitl <- vector("numeric", length = 5)
#NegMtchsTitl <- vector("numeric", length = 5)

positives <- readLines("positive-words.txt")
negatives <- readLines("negative-words.txt")
PosMatch <- vector(mode="character")
NegMatch <- vector(mode="character")

varClean<- function(dfVar){
  dfVar <- gsub("[[:punct:]]", "", dfVar)    # remove punctuation
  dfVar <- gsub("[[:cntrl:]]", "", dfVar)   # remove control characters
  dfVar <- gsub('[[:digit:]]+', '', dfVar) #remove numbers
  dfVar <- tolower(dfVar) #tolower
  x <- str_split(dfVar," ")
  x <- unlist(x)
  x <<- x
  posMatches <- match(x, positives)
  negMatches <- match(x, negatives)
  posMatches <- !is.na(posMatches)
  negMatches <- !is.na(negMatches)
  PosMatch <<- sum(posMatches)
  NegMatch <<- sum(negMatches)
}

#Testing:
varClean(dfCNN$Title)

#newsDF <- data.frame(newsDF, PosMtchsArt, NegMtchsArt, PosMtchsTitl, NegMtchsTitl)
#write.table(newsDF, file = "newsDF.csv", sep= ",", row.names = FALSE)

#adding values to the table
newsDF[5,5] <- PosMatch
newsDF[5,5] <- NegMatch
newsDF[1,7] <- length(x)

newsDF$PosArtPerc <- round((newsDF$PosMtchsArt/newsDF$TotArtWords), digits = 3)
newsDF$NegArtPerc <- round((newsDF$NegMtchsArt/newsDF$TotArtWords), digits = 3)
newsDF$PosTitlPerc <- round((newsDF$PosMtchsTitl/newsDF$TotTitlWords), digits = 3)
newsDF$NegTitlPerc <- round((newsDF$NegMtchsTitl/newsDF$TotTitlWords), digits = 3)

write.csv(newsDF, "newsDF.csv", row.names = FALSE)

###BEGIN PLOT PREPARATION
##clean News Names, create new DF
newsMelt <- newsDF
newsMelt$newsDF <- substring(newsDF$newsDF, 3)
newsMelt <- newsMelt[,c(1,8,9,10,11)]
#melt and plot
newsMelt <- melt(newsMelt, id.vars = 'newsDF')
p <- ggplot(newsMelt, aes(newsDF, value)) +   
      geom_bar(aes(fill = variable), position = "dodge", stat="identity")

p + scale_fill_discrete(name = "Word Match %",
                        breaks=c("PosArtPerc", "NegArtPerc","PosTitlPerc","NegTitlPerc"),
                        labels=c("Articles - Positive", "Articles - Negative",
                                 "Headlines - Positive", "Headlines - Negative"))  + 
  labs(title = "Positive and Negative Word Matches", 
       subtitle = "Percent of Total Words - News Articles & Headlines",
       caption = "Chris Kopel - Based on a Sample of 2015-2016 Articles") +
  theme(legend.title = element_text(face = "bold"), 
        legend.background = element_rect(fill="grey90", size = .5),
        plot.caption = element_text(hjust = 2.2),
        plot.title = element_text(size = 18)) + 
  scale_y_continuous(labels = percent)


##time for new plot, showing +/- differences in Pos/Neg word match for Art/Headlines
##clean News Names, create new DF
newsMelt2 <- newsDF
newsMelt2$newsDF <- substring(newsDF$newsDF, 3)
newsMelt2 <- newsMelt2[,c(1,8,9,10,11)]
newsMelt2$ArtDiff <- (newsMelt2$PosArtPerc-newsMelt2$NegArtPerc)
newsMelt2$TitlDiff <- (newsMelt2$PosTitlPerc-newsMelt2$NegTitlPerc)
newsMelt2 <- newsMelt2[,c(1,6,7)]


##Plot 2: Perc Diff
newsMelt2 <- melt(newsMelt2, id.vars = 'newsDF')
p <- ggplot(newsMelt2, aes(newsDF, value)) +   
  geom_bar(aes(fill = variable), position = "dodge", stat="identity")

p + scale_fill_discrete(name = "Word Match \n % Difference",
                        breaks=c("ArtDiff", "TitlDiff"),
                        labels=c("Articles", "Headlines"))  + 
  labs(title = "Positive and Negative Word Matches", 
       subtitle = "Percent Difference - News Articles & Headlines",
       caption = "Based on a Sample of 2015 and 2016 Articles - Chris Kopel",
       x = "News Source",
       y = "Percent Difference") +
  theme(legend.title = element_text(face = "bold"), 
        legend.background = element_rect(fill="grey90", size = .5),
        plot.caption = element_text(face = "italic", hjust = 1.9),
        plot.title = element_text(size = 18),
       axis.title = element_text(face = "bold")) + 
  scale_y_continuous(labels = percent) + 
  coord_flip()


